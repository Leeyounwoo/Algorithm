'''
7 8
1 2 1 3 2 4 2 5 4 6 5 6 6 7 3 7
'''
def bfs(v): # v : 출발 노드
    queue = []
    visited = [0] * (V+1)  # v  : 노드의 개수
    queue.append(v)

    while queue:
        new_v = queue.pop(0)

        if not visited[new_v]: # 방문한 적이 없다면

            visited[new_v] = 1 # 방문 처리
            print(new_v, end=" ")

            for nb in range(1, 1+V): # nb : 이웃 노드
                # 현재 노드 (new_v)와 연결되어 있고
                # 다음에 방문할 노드 (nb)가 방문한 적이 없다면
                if g[new_v][nb] == 1 and visited[nb] == 0:
                    queue.append(nb)

V, E = map(int, input().split())
temp = list(map(int, input().split()))
g = [[0 for _ in range(V+1)] for _ in range(V+1)]

for i in range(0, len(temp), 2):  #입력
    g[temp[i]][temp[i+1]] = 1
    g[temp[i+1]][temp[i]] = 1

print(bfs(1))